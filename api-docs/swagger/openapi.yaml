---
openapi: 3.0.3
info:
  title: School Management API
  version: 1.0.0
servers:
  - url: https://technodamo.github.io/cloud_tech_kubsu/api-docs/swagger/
    description: GitHub Pages server
tags:
  - name: Classes
    description: Endpoints related to school classes
  - name: Students
    description: Endpoints related to students
  - name: Teachers
    description: Endpoints related to teachers
  - name: Subjects
    description: Endpoints related to subjects
  - name: TeacherAssignments
    description: Assignments linking teachers and subjects
  - name: LessonSchedule
    description: Scheduled lessons for classes
  - name: LessonLogs
    description: Actual lessons that happened
  - name: StudentLessons
    description: Student participation, grades, and attendance
  - name: AttendanceStatuses
    description: Allowed attendance codes
paths:
  /classes:
    get:
      tags:
        - Classes
      summary: List all classes
      responses:
        "200":
          description: A list of classes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Class"
    post:
      tags:
        - Classes
      summary: Create a new class
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Class"
      responses:
        "201":
          description: Class created
  "/classes/{id}":
    get:
      tags:
        - Classes
      summary: Get class by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Class found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Class"
        "404":
          description: Not found
    put:
      tags:
        - Classes
      summary: Update class
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Class"
      responses:
        "200":
          description: Class updated
    delete:
      tags:
        - Classes
      summary: Delete class
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Class deleted
  /students:
    get:
      tags:
        - Students
      summary: List all students
      responses:
        "200":
          description: A list of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Student"
    post:
      tags:
        - Students
      summary: Create a new student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
      responses:
        "201":
          description: Student created
  "/students/{id}":
    get:
      tags:
        - Students
      summary: Get student by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Student found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Student"
        "404":
          description: Not found
    put:
      tags:
        - Students
      summary: Update student
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Student"
      responses:
        "200":
          description: Student updated
    delete:
      tags:
        - Students
      summary: Delete student
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Student deleted
  /teachers:
    get:
      tags:
        - Teachers
      summary: List all teachers
      responses:
        "200":
          description: A list of teachers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Teacher"
    post:
      tags:
        - Teachers
      summary: Create a new teacher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Teacher"
      responses:
        "201":
          description: Teacher created
  "/teachers/{id}":
    get:
      tags:
        - Teachers
      summary: Get teacher by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Teacher found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Teacher"
        "404":
          description: Not found
    put:
      tags:
        - Teachers
      summary: Update teacher
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Teacher"
      responses:
        "200":
          description: Teacher updated
    delete:
      tags:
        - Teachers
      summary: Delete teacher
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Teacher deleted
  /subjects:
    get:
      tags:
        - Subjects
      summary: List all subjects
      responses:
        "200":
          description: A list of subjects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Subject"
    post:
      tags:
        - Subjects
      summary: Create a new subject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subject"
      responses:
        "201":
          description: Subject created
  "/subjects/{id}":
    get:
      tags:
        - Subjects
      summary: Get subject by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Subject found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Subject"
        "404":
          description: Not found
    put:
      tags:
        - Subjects
      summary: Update subject
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Subject"
      responses:
        "200":
          description: Subject updated
    delete:
      tags:
        - Subjects
      summary: Delete subject
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Subject deleted
  /teacher-assignments:
    get:
      tags:
        - TeacherAssignments
      summary: List all teacher assignments
      responses:
        "200":
          description: A list of teacher assignments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeacherAssignment"
    post:
      tags:
        - TeacherAssignments
      summary: Create a new teacher assignment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeacherAssignment"
      responses:
        "201":
          description: Assignment created
  "/teacher-assignments/{id}":
    get:
      tags:
        - TeacherAssignments
      summary: Get teacher assignment by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Assignment found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeacherAssignment"
        "404":
          description: Not found
    put:
      tags:
        - TeacherAssignments
      summary: Update teacher assignment
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TeacherAssignment"
      responses:
        "200":
          description: Assignment updated
    delete:
      tags:
        - TeacherAssignments
      summary: Delete teacher assignment
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Assignment deleted
/lesson-logs:
  get:
    tags:
      - LessonLogs
    summary: List all lesson logs
    responses:
      "200":
        description: A list of lesson logs
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/LessonLog"
  post:
    tags:
      - LessonLogs
    summary: Create a new lesson log
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LessonLog"
    responses:
      "201":
        description: Lesson log created
"/lesson-logs/{id}":
  get:
    tags:
      - LessonLogs
    summary: Get lesson log by ID
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    responses:
      "200":
        description: Lesson log found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LessonLog"
      "404":
        description: Not found
  put:
    tags:
      - LessonLogs
    summary: Update lesson log
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LessonLog"
    responses:
      "200":
        description: Lesson log updated
  delete:
    tags:
      - LessonLogs
    summary: Delete lesson log
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    responses:
      "200":
        description: Lesson log deleted
/student-lessons:
  get:
    tags:
      - StudentLessons
    summary: List all student lessons
    responses:
      "200":
        description: A list of student lessons
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/StudentLesson"
  post:
    tags:
      - StudentLessons
    summary: Create a student lesson
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StudentLesson"
    responses:
      "201":
        description: Student lesson created
"/student-lessons/{id}":
  get:
    tags:
      - StudentLessons
    summary: Get student lesson by ID
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    responses:
      "200":
        description: Student lesson found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StudentLesson"
      "404":
        description: Not found
  put:
    tags:
      - StudentLessons
    summary: Update student lesson
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StudentLesson"
    responses:
      "200":
        description: Student lesson updated
  delete:
    tags:
      - StudentLessons
    summary: Delete student lesson
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    responses:
      "200":
        description: Student lesson deleted
/attendance-statuses:
  get:
    tags:
      - AttendanceStatuses
    summary: List all attendance statuses
    responses:
      "200":
        description: A list of attendance statuses
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/AttendanceStatus"
  post:
    tags:
      - AttendanceStatuses
    summary: Create a new attendance status
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AttendanceStatus"
    responses:
      "201":
        description: Attendance status created
"/attendance-statuses/{code}":
  get:
    tags:
      - AttendanceStatuses
    summary: Get attendance status by code
    parameters:
      - in: path
        name: code
        required: true
        schema:
          type: string
    responses:
      "200":
        description: Attendance status found
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AttendanceStatus"
      "404":
        description: Not found
  put:
    tags:
      - AttendanceStatuses
    summary: Update attendance status
    parameters:
      - in: path
        name: code
        required: true
        schema:
          type: string
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AttendanceStatus"
    responses:
      "200":
        description: Attendance status updated
  delete:
    tags:
      - AttendanceStatuses
    summary: Delete attendance status
    parameters:
      - in: path
        name: code
        required: true
        schema:
          type: string
    responses:
      "200":
        description: Attendance status deleted
components:
  schemas:
    Class:
      type: object
      properties:
        id:
          type: integer
        grade:
          type: integer
        letter:
          type: string
          maxLength: 1
      required:
        - grade
        - letter
    Student:
      type: object
      properties:
        id:
          type: integer
        class_id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        patronymic:
          type: string
      required:
        - class_id
        - first_name
        - last_name
    Teacher:
      type: object
      properties:
        id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        patronymic:
          type: string
      required:
        - first_name
        - last_name
    Subject:
      type: object
      properties:
        id:
          type: integer
        subject_name:
          type: string
      required:
        - subject_name
    TeacherAssignment:
      type: object
      properties:
        id:
          type: integer
        teacher_id:
          type: integer
        subject_id:
          type: integer
      required:
        - teacher_id
        - subject_id
    LessonSchedule:
      type: object
      properties:
        id:
          type: integer
        subject_id:
          type: integer
        weekday:
          type: integer
        number:
          type: integer
        class_id:
          type: integer
        teacher_id:
          type: integer
      required:
        - subject_id
        - weekday
        - number
        - class_id
        - teacher_id
    LessonLog:
      type: object
      properties:
        id:
          type: integer
        subject_id:
          type: integer
        date:
          type: string
          format: date
        number:
          type: integer
        class_id:
          type: integer
        teacher_id:
          type: integer
      required:
        - subject_id
        - date
        - number
        - class_id
        - teacher_id
    StudentLesson:
      type: object
      properties:
        id:
          type: integer
        student_id:
          type: integer
        lesson_id:
          type: integer
        grade:
          type: integer
        attendance_status:
          type: string
          maxLength: 1
      required:
        - student_id
        - lesson_id
        - attendance_status
    AttendanceStatus:
      type: object
      properties:
        code:
          type: string
          maxLength: 1
        description:
          type: string
      required:
        - code
        - description
